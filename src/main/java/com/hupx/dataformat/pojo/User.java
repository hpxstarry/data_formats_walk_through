/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hupx.dataformat.pojo;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class User extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3490323967621086682L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"User\",\"namespace\":\"com.hupx.dataformat.pojo\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"height\",\"type\":\"int\"},{\"name\":\"favorite_number\",\"type\":[\"int\",\"null\"]},{\"name\":\"favorite_color\",\"type\":[\"string\",\"null\"]},{\"name\":\"account\",\"type\":{\"type\":\"record\",\"name\":\"Account\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"balance\",\"type\":[\"double\",\"null\"]}]}},{\"name\":\"blogs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Blog\",\"fields\":[{\"name\":\"blog_id\",\"type\":\"string\"},{\"name\":\"content\",\"type\":\"string\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<User> ENCODER =
      new BinaryMessageEncoder<User>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<User> DECODER =
      new BinaryMessageDecoder<User>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<User> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<User> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<User> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<User>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this User to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a User from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a User instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static User fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence name;
  @Deprecated public int height;
  @Deprecated public java.lang.Integer favorite_number;
  @Deprecated public java.lang.CharSequence favorite_color;
  @Deprecated public com.hupx.dataformat.pojo.Account account;
  @Deprecated public java.util.List<com.hupx.dataformat.pojo.Blog> blogs;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public User() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param height The new value for height
   * @param favorite_number The new value for favorite_number
   * @param favorite_color The new value for favorite_color
   * @param account The new value for account
   * @param blogs The new value for blogs
   */
  public User(java.lang.CharSequence name, java.lang.Integer height, java.lang.Integer favorite_number, java.lang.CharSequence favorite_color, com.hupx.dataformat.pojo.Account account, java.util.List<com.hupx.dataformat.pojo.Blog> blogs) {
    this.name = name;
    this.height = height;
    this.favorite_number = favorite_number;
    this.favorite_color = favorite_color;
    this.account = account;
    this.blogs = blogs;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return height;
    case 2: return favorite_number;
    case 3: return favorite_color;
    case 4: return account;
    case 5: return blogs;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: height = (java.lang.Integer)value$; break;
    case 2: favorite_number = (java.lang.Integer)value$; break;
    case 3: favorite_color = (java.lang.CharSequence)value$; break;
    case 4: account = (com.hupx.dataformat.pojo.Account)value$; break;
    case 5: blogs = (java.util.List<com.hupx.dataformat.pojo.Blog>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'height' field.
   * @return The value of the 'height' field.
   */
  public int getHeight() {
    return height;
  }


  /**
   * Sets the value of the 'height' field.
   * @param value the value to set.
   */
  public void setHeight(int value) {
    this.height = value;
  }

  /**
   * Gets the value of the 'favorite_number' field.
   * @return The value of the 'favorite_number' field.
   */
  public java.lang.Integer getFavoriteNumber() {
    return favorite_number;
  }


  /**
   * Sets the value of the 'favorite_number' field.
   * @param value the value to set.
   */
  public void setFavoriteNumber(java.lang.Integer value) {
    this.favorite_number = value;
  }

  /**
   * Gets the value of the 'favorite_color' field.
   * @return The value of the 'favorite_color' field.
   */
  public java.lang.CharSequence getFavoriteColor() {
    return favorite_color;
  }


  /**
   * Sets the value of the 'favorite_color' field.
   * @param value the value to set.
   */
  public void setFavoriteColor(java.lang.CharSequence value) {
    this.favorite_color = value;
  }

  /**
   * Gets the value of the 'account' field.
   * @return The value of the 'account' field.
   */
  public com.hupx.dataformat.pojo.Account getAccount() {
    return account;
  }


  /**
   * Sets the value of the 'account' field.
   * @param value the value to set.
   */
  public void setAccount(com.hupx.dataformat.pojo.Account value) {
    this.account = value;
  }

  /**
   * Gets the value of the 'blogs' field.
   * @return The value of the 'blogs' field.
   */
  public java.util.List<com.hupx.dataformat.pojo.Blog> getBlogs() {
    return blogs;
  }


  /**
   * Sets the value of the 'blogs' field.
   * @param value the value to set.
   */
  public void setBlogs(java.util.List<com.hupx.dataformat.pojo.Blog> value) {
    this.blogs = value;
  }

  /**
   * Creates a new User RecordBuilder.
   * @return A new User RecordBuilder
   */
  public static com.hupx.dataformat.pojo.User.Builder newBuilder() {
    return new com.hupx.dataformat.pojo.User.Builder();
  }

  /**
   * Creates a new User RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new User RecordBuilder
   */
  public static com.hupx.dataformat.pojo.User.Builder newBuilder(com.hupx.dataformat.pojo.User.Builder other) {
    if (other == null) {
      return new com.hupx.dataformat.pojo.User.Builder();
    } else {
      return new com.hupx.dataformat.pojo.User.Builder(other);
    }
  }

  /**
   * Creates a new User RecordBuilder by copying an existing User instance.
   * @param other The existing instance to copy.
   * @return A new User RecordBuilder
   */
  public static com.hupx.dataformat.pojo.User.Builder newBuilder(com.hupx.dataformat.pojo.User other) {
    if (other == null) {
      return new com.hupx.dataformat.pojo.User.Builder();
    } else {
      return new com.hupx.dataformat.pojo.User.Builder(other);
    }
  }

  /**
   * RecordBuilder for User instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<User>
    implements org.apache.avro.data.RecordBuilder<User> {

    private java.lang.CharSequence name;
    private int height;
    private java.lang.Integer favorite_number;
    private java.lang.CharSequence favorite_color;
    private com.hupx.dataformat.pojo.Account account;
    private com.hupx.dataformat.pojo.Account.Builder accountBuilder;
    private java.util.List<com.hupx.dataformat.pojo.Blog> blogs;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hupx.dataformat.pojo.User.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.height)) {
        this.height = data().deepCopy(fields()[1].schema(), other.height);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.favorite_number)) {
        this.favorite_number = data().deepCopy(fields()[2].schema(), other.favorite_number);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.favorite_color)) {
        this.favorite_color = data().deepCopy(fields()[3].schema(), other.favorite_color);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.account)) {
        this.account = data().deepCopy(fields()[4].schema(), other.account);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasAccountBuilder()) {
        this.accountBuilder = com.hupx.dataformat.pojo.Account.newBuilder(other.getAccountBuilder());
      }
      if (isValidValue(fields()[5], other.blogs)) {
        this.blogs = data().deepCopy(fields()[5].schema(), other.blogs);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing User instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hupx.dataformat.pojo.User other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.height)) {
        this.height = data().deepCopy(fields()[1].schema(), other.height);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.favorite_number)) {
        this.favorite_number = data().deepCopy(fields()[2].schema(), other.favorite_number);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.favorite_color)) {
        this.favorite_color = data().deepCopy(fields()[3].schema(), other.favorite_color);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.account)) {
        this.account = data().deepCopy(fields()[4].schema(), other.account);
        fieldSetFlags()[4] = true;
      }
      this.accountBuilder = null;
      if (isValidValue(fields()[5], other.blogs)) {
        this.blogs = data().deepCopy(fields()[5].schema(), other.blogs);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'height' field.
      * @return The value.
      */
    public int getHeight() {
      return height;
    }


    /**
      * Sets the value of the 'height' field.
      * @param value The value of 'height'.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder setHeight(int value) {
      validate(fields()[1], value);
      this.height = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'height' field has been set.
      * @return True if the 'height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'height' field.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder clearHeight() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'favorite_number' field.
      * @return The value.
      */
    public java.lang.Integer getFavoriteNumber() {
      return favorite_number;
    }


    /**
      * Sets the value of the 'favorite_number' field.
      * @param value The value of 'favorite_number'.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder setFavoriteNumber(java.lang.Integer value) {
      validate(fields()[2], value);
      this.favorite_number = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'favorite_number' field has been set.
      * @return True if the 'favorite_number' field has been set, false otherwise.
      */
    public boolean hasFavoriteNumber() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'favorite_number' field.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder clearFavoriteNumber() {
      favorite_number = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'favorite_color' field.
      * @return The value.
      */
    public java.lang.CharSequence getFavoriteColor() {
      return favorite_color;
    }


    /**
      * Sets the value of the 'favorite_color' field.
      * @param value The value of 'favorite_color'.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder setFavoriteColor(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.favorite_color = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'favorite_color' field has been set.
      * @return True if the 'favorite_color' field has been set, false otherwise.
      */
    public boolean hasFavoriteColor() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'favorite_color' field.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder clearFavoriteColor() {
      favorite_color = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'account' field.
      * @return The value.
      */
    public com.hupx.dataformat.pojo.Account getAccount() {
      return account;
    }


    /**
      * Sets the value of the 'account' field.
      * @param value The value of 'account'.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder setAccount(com.hupx.dataformat.pojo.Account value) {
      validate(fields()[4], value);
      this.accountBuilder = null;
      this.account = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'account' field has been set.
      * @return True if the 'account' field has been set, false otherwise.
      */
    public boolean hasAccount() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'account' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hupx.dataformat.pojo.Account.Builder getAccountBuilder() {
      if (accountBuilder == null) {
        if (hasAccount()) {
          setAccountBuilder(com.hupx.dataformat.pojo.Account.newBuilder(account));
        } else {
          setAccountBuilder(com.hupx.dataformat.pojo.Account.newBuilder());
        }
      }
      return accountBuilder;
    }

    /**
     * Sets the Builder instance for the 'account' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hupx.dataformat.pojo.User.Builder setAccountBuilder(com.hupx.dataformat.pojo.Account.Builder value) {
      clearAccount();
      accountBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'account' field has an active Builder instance
     * @return True if the 'account' field has an active Builder instance
     */
    public boolean hasAccountBuilder() {
      return accountBuilder != null;
    }

    /**
      * Clears the value of the 'account' field.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder clearAccount() {
      account = null;
      accountBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'blogs' field.
      * @return The value.
      */
    public java.util.List<com.hupx.dataformat.pojo.Blog> getBlogs() {
      return blogs;
    }


    /**
      * Sets the value of the 'blogs' field.
      * @param value The value of 'blogs'.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder setBlogs(java.util.List<com.hupx.dataformat.pojo.Blog> value) {
      validate(fields()[5], value);
      this.blogs = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'blogs' field has been set.
      * @return True if the 'blogs' field has been set, false otherwise.
      */
    public boolean hasBlogs() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'blogs' field.
      * @return This builder.
      */
    public com.hupx.dataformat.pojo.User.Builder clearBlogs() {
      blogs = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public User build() {
      try {
        User record = new User();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.height = fieldSetFlags()[1] ? this.height : (java.lang.Integer) defaultValue(fields()[1]);
        record.favorite_number = fieldSetFlags()[2] ? this.favorite_number : (java.lang.Integer) defaultValue(fields()[2]);
        record.favorite_color = fieldSetFlags()[3] ? this.favorite_color : (java.lang.CharSequence) defaultValue(fields()[3]);
        if (accountBuilder != null) {
          try {
            record.account = this.accountBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("account"));
            throw e;
          }
        } else {
          record.account = fieldSetFlags()[4] ? this.account : (com.hupx.dataformat.pojo.Account) defaultValue(fields()[4]);
        }
        record.blogs = fieldSetFlags()[5] ? this.blogs : (java.util.List<com.hupx.dataformat.pojo.Blog>) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<User>
    WRITER$ = (org.apache.avro.io.DatumWriter<User>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<User>
    READER$ = (org.apache.avro.io.DatumReader<User>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.name);

    out.writeInt(this.height);

    if (this.favorite_number == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.favorite_number);
    }

    if (this.favorite_color == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.favorite_color);
    }

    this.account.customEncode(out);

    long size0 = this.blogs.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.hupx.dataformat.pojo.Blog e0: this.blogs) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);

      this.height = in.readInt();

      if (in.readIndex() != 0) {
        in.readNull();
        this.favorite_number = null;
      } else {
        this.favorite_number = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.favorite_color = null;
      } else {
        this.favorite_color = in.readString(this.favorite_color instanceof Utf8 ? (Utf8)this.favorite_color : null);
      }

      if (this.account == null) {
        this.account = new com.hupx.dataformat.pojo.Account();
      }
      this.account.customDecode(in);

      long size0 = in.readArrayStart();
      java.util.List<com.hupx.dataformat.pojo.Blog> a0 = this.blogs;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.hupx.dataformat.pojo.Blog>((int)size0, SCHEMA$.getField("blogs").schema());
        this.blogs = a0;
      } else a0.clear();
      SpecificData.Array<com.hupx.dataformat.pojo.Blog> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.hupx.dataformat.pojo.Blog>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.hupx.dataformat.pojo.Blog e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.hupx.dataformat.pojo.Blog();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          break;

        case 1:
          this.height = in.readInt();
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.favorite_number = null;
          } else {
            this.favorite_number = in.readInt();
          }
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.favorite_color = null;
          } else {
            this.favorite_color = in.readString(this.favorite_color instanceof Utf8 ? (Utf8)this.favorite_color : null);
          }
          break;

        case 4:
          if (this.account == null) {
            this.account = new com.hupx.dataformat.pojo.Account();
          }
          this.account.customDecode(in);
          break;

        case 5:
          long size0 = in.readArrayStart();
          java.util.List<com.hupx.dataformat.pojo.Blog> a0 = this.blogs;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.hupx.dataformat.pojo.Blog>((int)size0, SCHEMA$.getField("blogs").schema());
            this.blogs = a0;
          } else a0.clear();
          SpecificData.Array<com.hupx.dataformat.pojo.Blog> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.hupx.dataformat.pojo.Blog>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.hupx.dataformat.pojo.Blog e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.hupx.dataformat.pojo.Blog();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










